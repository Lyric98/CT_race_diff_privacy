salary <- read.delim("salary.txt", header = TRUE, sep = "\t", dec = ".")
salary <- read.delim("salary.txt", header = TRUE, sep = "\t", dec = ".")
View(salary)
salary <- read.delim2("salary.txt", header = TRUE, sep = "\t", dec = ",")
salary <- read.delim2("salary.txt", header = TRUE, sep = "\t", dec = ",")
salary <- read.delim2("salary.txt", header = FALSE, sep = "\t", dec = ",")
View(salary)
salary <- read.delim2("salary.txt", header = TRUE, sep = "|", dec = ",")
View(salary)
salary <- read.delim2("salary.txt", header = TRUE, sep = "", dec = ",")
View(salary)
salary <- read.delim2("salary.txt", header = FALSE, sep = "", dec = ",")
colnames(salary) <- c("ID", "sex", "years", "rank", "salary")
salary <- read.delim2("salary.txt", header = FALSE, sep = "", dec = ",")
colnames(salary) <- c("ID", "sex", "years", "rank", "salary")
salary_male <- mean(salary$salary[salary$sex == 0])
salary_female <- mean(salary$salary[salary$sex == 1])
salary <- read.delim2("salary.txt", header = FALSE, sep = "", dec = ",")
colnames(salary) <- c("ID", "sex", "years", "rank", "salary")
salary.m <- mean(salary$salary[salary$sex == 0])
salary.f <- mean(salary$salary[salary$sex == 1])
salary.m
salary.f
slr <- lm(salary ~ sex, data = salary)
slr.2 <- lm(salary ~ sex, data = salary)
summary(slr.2)
glm.5 = glm(salary ~ sex + as.factor(rank) + years, data=salary)
summary(glm.5)
salary$years2 = (salary$years)^2
glm.8 = glm(salary ~ sex + as.factor(rank) + years + years2, data=salary)
summary(glm.8)
glm.9 = glm(salary ~ sex + as.factor(rank) + years + sex*years, data=salary)
summary(glm.9)
load("simnum4.RData")
dp0527_fit <- cars
load("simnum5.RData")
dp_fit <- cars
load("simnum6.RData")
ce_fit <- cars
dim(dp0527_fit)
View(ce_fit)
library(dplyr)
library(tidyverse)
library(tidycensus)
library(tigris)
library(sp)
library(stringr)
library(haven)
library(reshape2)
library(rstudioapi)
library(RColorBrewer)
library(purrr)
library(maptools)
library(spdep)
library(MASS)
library(msm)
library(CARBayes)
library(epitools)
set.seed(2)
load("/Users/liyanran/Desktop/Research/Rachel/census_diff_privacy-master/vintage-05-27/nhgis_ppdd_20200527_tract/merged_denom_cov_w0527.RData")
# aggregate across the sex variable
agg_sex <- aggregate(ce_pop~GEOID+race+agecat,data=adat,
FUN = sum,na.rm=T)
agg_sex_dp <- aggregate(dp_pop~GEOID+race+agecat,data=adat,
FUN = sum,na.rm=T)
# dimnames
agelabs <- c("0-4", "5-9", "10-14", "15-17", "18-19", "20-24", "25-29", "30-34", "35-44", "45-54", "55-64")
# count
count <- rep(0, length(agelabs))
# stdcount & stdpop
std_pm <- read.csv("standard.csv")
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path))
# stdcount & stdpop
std_pm <- read.csv("standard.csv")
stdcount <- std_pm$stdcount
stdpop <- std_pm$stdpop
# ce matrix
ce_matrix <- matrix(0,ncol = length(unique(adat$GEOID)),
nrow=length(unique(adat$race)),
dimnames = list(unique(adat$race),
unique(adat$GEOID)))
for (i in unique(adat$GEOID)){
for (j in unique(adat$race)){
count = count
pop = agg_sex %>% filter(GEOID ==i, race==j)
output <- ageadjust.indirect(count, pop$ce_pop, stdcount, stdpop, stdrate = NULL, conf.level = 0.95)
ce_matrix[j, i] <- output$sir[2]
}
}
# dp matrix
dp_matrix <- matrix(0,ncol = length(unique(adat$GEOID)),
nrow=length(unique(adat$race)),
dimnames = list(unique(adat$race),
unique(adat$GEOID)))
for (i in unique(adat$GEOID)){
for (j in unique(adat$race)){
count = count
pop_dp = agg_sex_dp %>% filter(GEOID ==i, race==j)
output <- ageadjust.indirect(count, pop_dp$dp_pop, stdcount, stdpop, stdrate = NULL, conf.level = 0.95)
dp_matrix[j, i] <- output$sir[2]
}
}
# 0527 new dp matrix
dp0527_matrix <- matrix(0,ncol = length(unique(adat$GEOID)),
nrow=length(unique(adat$race)),
dimnames = list(unique(adat$race),
unique(adat$GEOID)))
for (i in unique(adat$GEOID)){
for (j in unique(adat$race)){
count = count
pop_dp0527 = agg_sex_dp0527 %>% filter(GEOID ==i, race==j)
output <- ageadjust.indirect(count, pop_dp0527$dp0527_pop, stdcount, stdpop, stdrate = NULL, conf.level = 0.95)
dp0527_matrix[j, i] <- output$sir[2]
}
}
# long form
# merge the census and differential private expected counts
ce_l <- data.frame(t(ce_matrix)) %>%
mutate(GEOID = dimnames(data.frame(t(ce_matrix)))[[1]]) %>%
gather(race, exp_counts_ce, -GEOID)
dp_l <- data.frame(t(dp_matrix)) %>%
mutate(GEOID = dimnames(data.frame(t(dp_matrix)))[[1]]) %>%
gather(race, exp_counts_dp, -GEOID)
dp0527_l <- data.frame(t(dp0527_matrix)) %>%
mutate(GEOID = dimnames(data.frame(t(dp0527_matrix)))[[1]]) %>%
gather(race, exp_counts_dp0527, -GEOID)
exp_l <- ce_l %>% left_join(dp_l, by=c("GEOID", "race")) %>% left_join(dp0527_l, by=c("GEOID", "race"))
cov_l <- aggregate(cbind(acs_pov_pct)~GEOID+race,data=adat,
FUN = mean)
## merge these aggregated datasets ##
adat<-merge(exp_l,cov_l,by=c('GEOID','race'))
## check CTs' expected counts ##
adat<-subset(adat,exp_counts_ce>0 & exp_counts_dp>0 & exp_counts_dp0527>0)
# dim(adat)
# 8111    6
adat<-adat[order(adat$GEOID),]
View(adat)
# dim(adat)
# 8111    6
adat<-adat[order(adat$GEOID),]
View(adat)
load('merged_denom_cov_w0527.RData')
load("/Users/liyanran/Desktop/Research/Rachel/census_diff_privacy-master/vintage-05-27/nhgis_ppdd_20200527_tract/merged_denom_cov_w0527.RData")
# aggregate across the sex variable
agg_sex <- aggregate(ce_pop~GEOID+race+agecat,data=adat,
FUN = sum,na.rm=T)
agg_sex_dp <- aggregate(dp_pop~GEOID+race+agecat,data=adat,
FUN = sum,na.rm=T)
agg_sex_dp0527 <- aggregate(dp0527_pop~GEOID+race+agecat,data=adat,
FUN = sum,na.rm=T)
# dimnames
agelabs <- c("0-4", "5-9", "10-14", "15-17", "18-19", "20-24", "25-29", "30-34", "35-44", "45-54", "55-64")
# count
count <- rep(0, length(agelabs))
# stdcount & stdpop
std_pm <- read.csv("standard.csv")
stdcount <- std_pm$stdcount
stdpop <- std_pm$stdpop
# ce matrix
ce_matrix <- matrix(0,ncol = length(unique(adat$GEOID)),
nrow=length(unique(adat$race)),
dimnames = list(unique(adat$race),
unique(adat$GEOID)))
for (i in unique(adat$GEOID)){
for (j in unique(adat$race)){
count = count
pop = agg_sex %>% filter(GEOID ==i, race==j)
output <- ageadjust.indirect(count, pop$ce_pop, stdcount, stdpop, stdrate = NULL, conf.level = 0.95)
ce_matrix[j, i] <- output$sir[2]
}
}
# dp matrix
dp_matrix <- matrix(0,ncol = length(unique(adat$GEOID)),
nrow=length(unique(adat$race)),
dimnames = list(unique(adat$race),
unique(adat$GEOID)))
for (i in unique(adat$GEOID)){
for (j in unique(adat$race)){
count = count
pop_dp = agg_sex_dp %>% filter(GEOID ==i, race==j)
output <- ageadjust.indirect(count, pop_dp$dp_pop, stdcount, stdpop, stdrate = NULL, conf.level = 0.95)
dp_matrix[j, i] <- output$sir[2]
}
}
# 0527 new dp matrix
dp0527_matrix <- matrix(0,ncol = length(unique(adat$GEOID)),
nrow=length(unique(adat$race)),
dimnames = list(unique(adat$race),
unique(adat$GEOID)))
for (i in unique(adat$GEOID)){
for (j in unique(adat$race)){
count = count
pop_dp0527 = agg_sex_dp0527 %>% filter(GEOID ==i, race==j)
output <- ageadjust.indirect(count, pop_dp0527$dp0527_pop, stdcount, stdpop, stdrate = NULL, conf.level = 0.95)
dp0527_matrix[j, i] <- output$sir[2]
}
}
# long form
# merge the census and differential private expected counts
ce_l <- data.frame(t(ce_matrix)) %>%
mutate(GEOID = dimnames(data.frame(t(ce_matrix)))[[1]]) %>%
gather(race, exp_counts_ce, -GEOID)
dp_l <- data.frame(t(dp_matrix)) %>%
mutate(GEOID = dimnames(data.frame(t(dp_matrix)))[[1]]) %>%
gather(race, exp_counts_dp, -GEOID)
dp0527_l <- data.frame(t(dp0527_matrix)) %>%
mutate(GEOID = dimnames(data.frame(t(dp0527_matrix)))[[1]]) %>%
gather(race, exp_counts_dp0527, -GEOID)
exp_l <- ce_l %>% left_join(dp_l, by=c("GEOID", "race")) %>% left_join(dp0527_l, by=c("GEOID", "race"))
cov_l <- aggregate(cbind(acs_pov_pct)~GEOID+race,data=adat,
FUN = mean)
## merge these aggregated datasets ##
adat<-merge(exp_l,cov_l,by=c('GEOID','race'))
## check CTs' expected counts ##
adat<-subset(adat,exp_counts_ce>0 & exp_counts_dp>0 & exp_counts_dp0527>0)
View(adat)
# dim(adat)
# 8111    6
adat<-adat[order(adat$GEOID),]
# remove all the race groups from the dataset expect black and white
adat <- adat %>% filter(race == 'white' | race == 'black')
dim(adat)
## add black & white index
adat$bw_ind<-0
adat$bw_ind[which(adat$race=='black')]<-1
## create the matrices simulate ##
X<-cbind(1,adat$bw_ind,adat$acs_pov_pct)
colnames(X)<-c('intercept','bw','pov')
P<-matrix(adat$exp_counts_dp0527)
Ptrue<-matrix(adat$exp_counts_ce)
N<-nrow(X)
Nct<-length(unique(adat$GEOID))
W <- read.csv("W.csv")
rownames(W) <- W[,1]
W <- W[,-1]
## census tracts in W with matches in the data ##
tractrm<-which(rownames(W) %in% as.character(adat$GEOID))
W<-W[tractrm,tractrm]
W<-W[order(as.numeric(rownames(W))),order(as.numeric(rownames(W)))]
identical(unique(as.character(adat$GEOID)),rownames(W)) # 1460*1460
## spatial information ##
Dw<-diag(rowSums(W))
#rho_bds<-eigen(sqrt(solve(Dw))%*%W%*%sqrt(solve(Dw)))$values
#print(1/min(rho_bds))
#print(1/max(rho_bds))
rho<-.2
## lambda=scalar background rate ##
# set the lambda object equal to 1
lambda <- 1
## beta coefficients for covariates ##
beta<-c(0,0.4,0.01)
reps<-100
reps<-10
nburn<-100
nburn<-100
nsamp<-300
cars<-matrix(NA,nrow=reps,ncol=dim(adat)[1])
simnum = 4
set.seed(simnum)
W <- as.matrix(W)
for (xx in 1:reps){
## U (spatial component) ##
# Simulate from a Multivariate Normal Distribution
U<-matrix(mvrnorm(n=1,mu=rep(0,Nct),Sigma=solve(Dw-(rho*W))))
U<-U[as.numeric(as.factor(adat$GEOID)),]
## V (unsturctured variance component 无结构方差组分) ##
V<-matrix(rnorm(n=N,mean=0,sd=.5))
## generate outcome ##
theta<-X%*%beta+U+V
Y<-matrix(rpois(n=N,lambda=lambda*Ptrue*exp(theta))) #Poisson Distribution
######################################
## FIT STANDARD SPATIAL CAR  MODEL  ##
######################################
adat$Y<-Y
adat$offs<-log(lambda*P)
results_cars<-S.CARmultilevel(Y~bw_ind+acs_pov_pct+offset(offs),family="poisson",data=adat,
ind.area=as.numeric(as.factor(adat$GEOID)),
ind.re=as.factor(1:N),
W=W,burnin=nburn,n.sample=nsamp)
cars[xx,]<-fitted(results_cars)
}
View(results_cars)
View(cars)
dim(cars)
row_mean = apply(cars,1,mean)
row_mean
row_mean = apply(cars,2,mean)
row_mean
row_mean = apply(cars[1:8,],2,mean)
row_mean
plot(row_mean)
View(adat)
save(adat,file='adat.RData')
load("adat.RData")
load("/Users/liyanran/Desktop/Research/Rachel/CT_race_diff_privacy/adat.RData")
names(adat)
library(dplyr)
load("~/Desktop/Research/Rachel/census_diff_privacy-master/data_processing/merged_pm_denom_cov_data.RData")
data <- adat[c('GEOID', 'race', 'agecat', 'sex', 'ce_pop', 'ndeaths_5yr')]
colnames(data) <- c('region', 'race', 'age', 'sex', 'pop', 'death')
# aggregate age
data[data$age=="Age0-4"|data$age=="Age5-9"|data$age=="Age10-14"|data$age=="Age15-17",]$age <- "Age0-17"
data[data$age=="Age18-19"|data$age=="Age20-24"|data$age=="Age25-29"|data$age=="Age30-34",]$age <- "Age18-34"
data[data$age=="Age35-44"|data$age=="Age45-54",]$age <- "Age35-54"
# aggregate race
# delete "total"
data <- data %>% filter(race!="total")
View(data)
data[data$race=="am_indian"|data$race=="asian"|data$race=="hispanic"|data$race=="pac_islander",]$race <- "others"
data_pop <- aggregate(data$pop, by=list(region=data$region, race=data$race, age=data$age, sex=data$sex), FUN=sum)
data_death <- aggregate(data$death, by=list(region=data$region, race=data$race, age=data$age, sex=data$sex), FUN=sum)
data_death <- aggregate(data$death, by=list(region=data$region, race=data$race, age=data$age, sex=data$sex), FUN=sum)
data_new <- merge(data_pop, data_death, by=c( "region", "race",   "age" ,   "sex"   ))
data_pop
View(data_death)
View(data_new)
View(data_pop)
pop <- adat[1:3]
View(pop)
load('merged_denom_cov_w0527.RData')
load("/Users/liyanran/Desktop/Research/Rachel/census_diff_privacy-master/vintage-05-27/nhgis_ppdd_20200527_tract/merged_denom_cov_w0527.RData")
# aggregate across the sex variable
agg_sex <- aggregate(ce_pop~GEOID+race+agecat,data=adat,
FUN = sum,na.rm=T)
agg_sex_dp <- aggregate(dp_pop~GEOID+race+agecat,data=adat,
FUN = sum,na.rm=T)
agg_sex_dp0527 <- aggregate(dp0527_pop~GEOID+race+agecat,data=adat,
FUN = sum,na.rm=T)
# dimnames
agelabs <- c("0-4", "5-9", "10-14", "15-17", "18-19", "20-24", "25-29", "30-34", "35-44", "45-54", "55-64")
# count
count <- rep(0, length(agelabs))
# stdcount & stdpop
std_pm <- read.csv("standard.csv")
stdcount <- std_pm$stdcount
stdpop <- std_pm$stdpop
# ce matrix
ce_matrix <- matrix(0,ncol = length(unique(adat$GEOID)),
nrow=length(unique(adat$race)),
dimnames = list(unique(adat$race),
unique(adat$GEOID)))
for (i in unique(adat$GEOID)){
for (j in unique(adat$race)){
count = count
pop = agg_sex %>% filter(GEOID ==i, race==j)
output <- ageadjust.indirect(count, pop$ce_pop, stdcount, stdpop, stdrate = NULL, conf.level = 0.95)
ce_matrix[j, i] <- output$sir[2]
}
}
dp matrix
dp_matrix <- matrix(0,ncol = length(unique(adat$GEOID)),
nrow=length(unique(adat$race)),
dimnames = list(unique(adat$race),
unique(adat$GEOID)))
for (i in unique(adat$GEOID)){
for (j in unique(adat$race)){
count = count
pop_dp = agg_sex_dp %>% filter(GEOID ==i, race==j)
output <- ageadjust.indirect(count, pop_dp$dp_pop, stdcount, stdpop, stdrate = NULL, conf.level = 0.95)
dp_matrix[j, i] <- output$sir[2]
}
}
# 0527 new dp matrix
dp0527_matrix <- matrix(0,ncol = length(unique(adat$GEOID)),
nrow=length(unique(adat$race)),
dimnames = list(unique(adat$race),
unique(adat$GEOID)))
for (i in unique(adat$GEOID)){
for (j in unique(adat$race)){
count = count
pop_dp0527 = agg_sex_dp0527 %>% filter(GEOID ==i, race==j)
output <- ageadjust.indirect(count, pop_dp0527$dp0527_pop, stdcount, stdpop, stdrate = NULL, conf.level = 0.95)
dp0527_matrix[j, i] <- output$sir[2]
}
}
# long form
# merge the census and differential private expected counts
ce_l <- data.frame(t(ce_matrix)) %>%
mutate(GEOID = dimnames(data.frame(t(ce_matrix)))[[1]]) %>%
gather(race, exp_counts_ce, -GEOID)
dp_l <- data.frame(t(dp_matrix)) %>%
mutate(GEOID = dimnames(data.frame(t(dp_matrix)))[[1]]) %>%
gather(race, exp_counts_dp, -GEOID)
dp0527_l <- data.frame(t(dp0527_matrix)) %>%
mutate(GEOID = dimnames(data.frame(t(dp0527_matrix)))[[1]]) %>%
gather(race, exp_counts_dp0527, -GEOID)
exp_l <- ce_l %>% left_join(dp_l, by=c("GEOID", "race")) %>% left_join(dp0527_l, by=c("GEOID", "race"))
cov_l <- aggregate(cbind(acs_pov_pct)~GEOID+race,data=adat,
FUN = mean)
## merge these aggregated datasets ##
adat<-merge(exp_l,cov_l,by=c('GEOID','race'))
## check CTs' expected counts ##
adat<-subset(adat,exp_counts_ce>0 & exp_counts_dp>0 & exp_counts_dp0527>0)
adat<-adat[order(adat$GEOID),]
# remove all the race groups from the dataset expect black and white
adat <- adat %>% filter(race == 'white' | race == 'black')
# dim(adat)
# 2877    6
## add black & white index
adat$bw_ind<-0
adat$bw_ind[which(adat$race=='black')]<-1
save(adat,file='bw_adat.RData'))
save(adat,file='bw_adat.RData')
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path))
load("adat.RData")
load("bw_adat.RData")
load("/Users/liyanran/Desktop/Research/Rachel/CT_race_diff_privacy/bw_adat.RData")
load("bw_adat.RData")
names(adat)
pop <- adat[1:3]
load("/Users/liyanran/Desktop/Research/Rachel/CT_race_diff_privacy/simnum4.RData")
dp0527_fit <- cars
load("/Users/liyanran/Desktop/Research/Rachel/CT_race_diff_privacy/simnum5.RData")
dp_fit <- cars
load("/Users/liyanran/Desktop/Research/Rachel/CT_race_diff_privacy/simnum6.RData")
ce_fit <- cars
dp0527_fit_mean <- apply(dp0527_fit, 2, mean)
ce_fit_mean <- apply(ce_fit, 2, mean)
?merge
pop <- cbind(adat[1:3], dp_fit_mean, dp0527_fit_mean, ce_fit_mean)
dp_fit_mean <- apply(dp_fit, 2, mean)
pop <- cbind(adat[1:3], dp_fit_mean, dp0527_fit_mean, ce_fit_mean)
pop <- cbind(adat[1:3], dp_fit_mean, dp0527_fit_mean, ce_fit_mean) %>% mutate(dp_bias = dp_fit_mean - ce_fit_mean) %>% mutate(dp0527_bias = dp0527_fit_mean - ce_fit_mean)
# white population
white_bias <- pop[pop$race=='white']
# white population
white_bias <- pop[pop$race=='white',]
View(white_bias)
boxplot(white_bias)
boxplot(white_bias$dp_bias)
boxplot(white_bias$dp0527_bias)
?melt
names(pop)
pop_box <- pop[c("GEOID", "race", "dp_bias","dp0527_bias"),]
View(pop_box)
pop <- cbind(adat[1:3], dp_fit_mean, dp0527_fit_mean, ce_fit_mean) %>% mutate(dp_bias = dp_fit_mean - ce_fit_mean) %>% mutate(dp0527_bias = dp0527_fit_mean - ce_fit_mean)
pop_box <- pop[c("GEOID", "race", "dp_bias","dp0527_bias"),]
pop_box <- pop[,c("GEOID", "race", "dp_bias","dp0527_bias")]
ex <- melt(pop_box, id.vars=c("GEOID"))
View(ex)
convert <- function(d) {
lapply(2:ncol(d), function(i) {
d2 <- d[, c(1,i)]
d2$type = colnames(d2)[2]
colnames(d2) = c("riskScore", "category", "type")
return(d2)
}) %>% do.call('rbind', .)
}
dd <- convert(pop_box)
head(dd)
pop <- cbind(adat[1:3], dp_fit_mean, dp0527_fit_mean, ce_fit_mean) %>% mutate(dp_bias = dp_fit_mean - ce_fit_mean) %>% mutate(dp0527_bias = dp0527_fit_mean - ce_fit_mean)
pop_box <- pop[,c("GEOID", "race", "dp_bias","dp0527_bias")]
white_pop <- pop_box[pop_box$race=="white",]
View(white_pop)
melt(white_pop)
View(melt(white_pop))
View(pop_box)
View(melt(pop_box)
)
View(melt(pop_box)
+ )
View(melt(pop_box)
)
ggplot(melt(pop_box), aes(x=variable,y=value, fill=variable)) +
geom_boxplot()
ggplot(melt(pop_box), aes(x=variable,y=value, fill=variable)) +
geom_boxplot()
ggplot(melt(pop_box), aes(x=variable,y=value, fill=race)) +
geom_boxplot()
ggplot(melt(pop_box), aes(x=race,y=value, fill=variable)) +
geom_boxplot()
View(pop)
?aggregate
?merge
?unite
data_pop <- aggregate(pop$exp_counts_ce, by=pop$GEOID, FUN=sum)
data_pop <- aggregate(pop$exp_counts_ce, by=list(pop$GEOID), FUN=sum)
View(data_pop)
data_pop <- aggregate(pop$exp_counts_ce, by=list(GEOID=pop$GEOID), FUN=sum)
data_pop <- aggregate(exp_counts_ce = pop$exp_counts_ce, by=list(GEOID=pop$GEOID), FUN=sum)
data_pop <- aggregate(pop$exp_counts_ce, by=list(GEOID=pop$GEOID), FUN=sum)
?IQR
IQR(data_pop$x)
quantile(data_pop$x, 1/4) # 4.603226
pop_box2 <- merge(pop[,c("GEOID", "race", "dp_bias","dp0527_bias")], data_pop)
View(pop_box2)
pop_box2 <- merge(pop[,c("GEOID", "race", "dp_bias","dp0527_bias")], data_pop) %>% mutate(size=ifelse(x<=quantile(data_pop$x, 1/4), "small", "large"))
ggplot(melt(pop_box2), aes(x=size,y=value, fill=variable)) +
geom_boxplot()
box2 <- melt(pop_box2[-"x",])
box2 <- melt(pop_box2[,-c("x")])
box2 <- melt(pop_box2[,-"x"])
box2 <- melt(pop_box2[,-2])
pop_box2[,-2]
head(pop_box2[,-2])
head(pop_box2[-2,])
head(pop_box2[,-5])
box2 <- melt(pop_box2[,-5])
ggplot(box2, aes(x=size,y=value, fill=variable)) +
geom_boxplot()
pop <- cbind(adat[1:3], dp_fit_mean, dp0527_fit_mean, ce_fit_mean) %>% mutate(dp_bias = dp_fit_mean - ce_fit_mean) %>% mutate(dp0527_bias = dp0527_fit_mean - ce_fit_mean)
pop_box <- pop[,c("GEOID", "race", "dp_bias","dp0527_bias")]
ggplot(melt(pop_box), aes(x=race,y=value, fill=variable)) +
geom_boxplot()
data_pop <- aggregate(pop$exp_counts_ce, by=list(GEOID=pop$GEOID), FUN=sum)
quantile(data_pop$x, 1/4) # 3.974952
pop_box2 <- merge(pop[,c("GEOID", "race", "dp_bias","dp0527_bias")], data_pop) %>% mutate(size=ifelse(x<=quantile(data_pop$x, 1/4), "small", "large"))
box2 <- melt(pop_box2[,-5])
ggplot(box2, aes(x=size,y=value, fill=variable)) +
geom_boxplot()
