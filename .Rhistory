ma_shp<-tracts(state = 'MA',year=2010)
## merge with pop and rate data ##
ma_shp<-merge(ma_shp,adat_wide,by.x='GEOID10',by.y='GEOID',all.x=T)
## put in sf format to use nice mapping packages ##
ma_shp<-st_as_sf(ma_shp)  #1478*21
shp_plot0527<-gather(ma_shp,'race','fit0527_mape',
c(dp0527_fit_mape_w,dp0527_fit_mape_b),factor_key = T)
shp_plot0527$race<-mapvalues(shp_plot0527$race,
from=c('dp0527_fit_mape_w','dp0527_fit_mape_b'),
to=c('NHW','Black'))
ma_q<-c(0,0.01,0.05,0.1,0.2,1,1.5,max(shp_plot$fit0527_mape,na.rm = T)+1)
shp_plot$exp_factor<-cut(shp_plot$fit_mape,breaks=ma_q,
labels=c('<0.01','[0.01,0.05)','[0.05,0.1)','[0.1,0.2)',
'[0.2,1.0)','[1.0,1.5)','1.5+'),right=F)
shp_plot0527$exp_factor<-cut(shp_plot0527$fit0527_mape,breaks=ma_q,
labels=c('<0.01','[0.01,0.05)','[0.05,0.1)','[0.1,0.2)',
'[0.2,1.0)','[1.0,1.5)','1.5+'),right=F)
## race-stratified expected counts, MA ##
ma_maps0527<-ggplot(shp_plot0527, aes(fill = exp_factor)) +
geom_sf(colour=NA) +
scale_fill_brewer(palette = "YlOrRd")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_line(colour = 'transparent'),
panel.grid.minor = element_line(colour = 'transparent'),
legend.title=element_blank(),text=element_text(size=18))+
facet_wrap(~ race)
## read in boston shapefiles ##
bos_shp<-st_read('boston_ct/Census_2010_Tracts.shp')
bos_shp<-merge(bos_shp,adat_wide,by.x='GEOID10',by.y='GEOID',all.x=T)
bos_bbox<-as.numeric(st_bbox(bos_shp))
xlim<-c(bos_bbox[1], bos_bbox[1]+.4*(bos_bbox[3]-bos_bbox[1]))
ylim<-c(bos_bbox[2], bos_bbox[2]+.8*(bos_bbox[4]-bos_bbox[2]))
## long form by race ##
shp_plot0527<-gather(bos_shp,'race','fit_mape',
c(dp0527_fit_mape_w,dp0527_fit_mape_b),factor_key = T)
shp_plot0527$race<-mapvalues(shp_plot0527$race,
from=c('dp0527_fit_mape_w','dp0527_fit_mape_b'),
to=c('NHW','Black'))
shp_plot0527$exp_factor<-cut(shp_plot0527$fit_mape,breaks=ma_q,
labels=c('<0.01','[0.01,0.05)','[0.05,0.1)','[0.1,0.2)',
'[0.2,1.0)','[1.0,1.5)','1.5+'),right=F)
## race-stratified expected counts, BOS ##
bos_maps0527<-ggplot(shp_plot0527, aes(fill = exp_factor)) +
geom_sf(colour=NA) +
coord_sf(xlim=xlim,ylim=ylim)+
scale_fill_brewer(palette = "YlOrRd")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_line(colour = 'transparent'),
panel.grid.minor = element_line(colour = 'transparent'),
legend.title=element_blank(),text=element_text(size=18))+
facet_wrap(~ race)
m0527<-cowplot::plot_grid(ma_maps0527,bos_maps0527,ncol=1)
## save to pdf ##
pdf('maps_mape0527.pdf',width=7,height=6)
m0527
m0527
max(shp_plot$fit0527_mape,na.rm = T)+1
max(shp_plot$fit0527_mape,na.rm = T)+1
ma_q
max(shp_plot0527$fit0527_mape,na.rm = T)+1
max(shp_plot0527$fit0527_mape,na.rm = T)+1
#### MAPE0527 plot
load('bw_adat.RData')
adat <- cbind(adat, dp0527_fit_mape)[,c(1, 2, 8)] #2877*4
## put in wide format to merge with the shapefile ##
adat_wide<-merge(adat[which(adat$race=='white'),],adat[which(adat$race=='black'),],by='GEOID',suffixes=c('_w','_b'))
## extract CT shapefile ##
ma_shp<-tracts(state = 'MA',year=2010)
## merge with pop and rate data ##
ma_shp<-merge(ma_shp,adat_wide,by.x='GEOID10',by.y='GEOID',all.x=T)
## put in sf format to use nice mapping packages ##
ma_shp<-st_as_sf(ma_shp)  #1478*21
shp_plot0527<-gather(ma_shp,'race','fit0527_mape',
c(dp0527_fit_mape_w,dp0527_fit_mape_b),factor_key = T)
shp_plot0527$race<-mapvalues(shp_plot0527$race,
from=c('dp0527_fit_mape_w','dp0527_fit_mape_b'),
to=c('NHW','Black'))
ma_q<-c(0,0.01,0.05,0.1,0.2,1,1.5,max(shp_plot0527$fit0527_mape,na.rm = T)+1)
ma_q
shp_plot0527$exp_factor<-cut(shp_plot0527$fit0527_mape,breaks=ma_q,
labels=c('<0.01','[0.01,0.05)','[0.05,0.1)','[0.1,0.2)',
'[0.2,1.0)','[1.0,1.5)','1.5+'),right=F)
## race-stratified expected counts, MA ##
ma_maps0527<-ggplot(shp_plot0527, aes(fill = exp_factor)) +
geom_sf(colour=NA) +
scale_fill_brewer(palette = "YlOrRd")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_line(colour = 'transparent'),
panel.grid.minor = element_line(colour = 'transparent'),
legend.title=element_blank(),text=element_text(size=18))+
facet_wrap(~ race)
## read in boston shapefiles ##
bos_shp<-st_read('boston_ct/Census_2010_Tracts.shp')
bos_shp<-merge(bos_shp,adat_wide,by.x='GEOID10',by.y='GEOID',all.x=T)
bos_bbox<-as.numeric(st_bbox(bos_shp))
xlim<-c(bos_bbox[1], bos_bbox[1]+.4*(bos_bbox[3]-bos_bbox[1]))
ylim<-c(bos_bbox[2], bos_bbox[2]+.8*(bos_bbox[4]-bos_bbox[2]))
## long form by race ##
shp_plot0527<-gather(bos_shp,'race','fit_mape',
c(dp0527_fit_mape_w,dp0527_fit_mape_b),factor_key = T)
shp_plot0527$race<-mapvalues(shp_plot0527$race,
from=c('dp0527_fit_mape_w','dp0527_fit_mape_b'),
to=c('NHW','Black'))
shp_plot0527$exp_factor<-cut(shp_plot0527$fit_mape,breaks=ma_q,
labels=c('<0.01','[0.01,0.05)','[0.05,0.1)','[0.1,0.2)',
'[0.2,1.0)','[1.0,1.5)','1.5+'),right=F)
## read in boston shapefiles ##
bos_shp<-st_read('boston_ct/Census_2010_Tracts.shp')
bos_shp<-merge(bos_shp,adat_wide,by.x='GEOID10',by.y='GEOID',all.x=T)
bos_bbox<-as.numeric(st_bbox(bos_shp))
xlim<-c(bos_bbox[1], bos_bbox[1]+.4*(bos_bbox[3]-bos_bbox[1]))
ylim<-c(bos_bbox[2], bos_bbox[2]+.8*(bos_bbox[4]-bos_bbox[2]))
## long form by race ##
shp_plot0527<-gather(bos_shp,'race','fit0527_mape',
c(dp0527_fit_mape_w,dp0527_fit_mape_b),factor_key = T)
shp_plot0527$race<-mapvalues(shp_plot0527$race,
from=c('dp0527_fit_mape_w','dp0527_fit_mape_b'),
to=c('NHW','Black'))
shp_plot0527$exp_factor<-cut(shp_plot0527$fit0527_mape,breaks=ma_q,
labels=c('<0.01','[0.01,0.05)','[0.05,0.1)','[0.1,0.2)',
'[0.2,1.0)','[1.0,1.5)','1.5+'),right=F)
## race-stratified expected counts, BOS ##
bos_maps0527<-ggplot(shp_plot0527, aes(fill = exp_factor)) +
geom_sf(colour=NA) +
coord_sf(xlim=xlim,ylim=ylim)+
scale_fill_brewer(palette = "YlOrRd")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_line(colour = 'transparent'),
panel.grid.minor = element_line(colour = 'transparent'),
legend.title=element_blank(),text=element_text(size=18))+
facet_wrap(~ race)
m0527<-cowplot::plot_grid(ma_maps0527,bos_maps0527,ncol=1)
m0527
m0527
m0527
ma_q
length(ma_q)
labels=c('<0.01','[0.01,0.05)','[0.05,0.1)','[0.1,0.2)',
'[0.2,1.0)','[1.0,1.5)','1.5+')
length(labels)
## read in boston shapefiles ##
bos_shp<-st_read('boston_ct/Census_2010_Tracts.shp')
bos_shp<-merge(bos_shp,adat_wide,by.x='GEOID10',by.y='GEOID',all.x=T)
bos_bbox<-as.numeric(st_bbox(bos_shp))
xlim<-c(bos_bbox[1], bos_bbox[1]+.4*(bos_bbox[3]-bos_bbox[1]))
ylim<-c(bos_bbox[2], bos_bbox[2]+.8*(bos_bbox[4]-bos_bbox[2]))
## long form by race ##
shp_plot0527<-gather(bos_shp,'race','fit0527_mape',
c(dp0527_fit_mape_w,dp0527_fit_mape_b),factor_key = T)
shp_plot0527$race<-mapvalues(shp_plot0527$race,
from=c('dp0527_fit_mape_w','dp0527_fit_mape_b'),
to=c('NHW','Black'))
shp_plot0527$exp_factor<-cut(shp_plot0527$fit0527_mape,breaks=ma_q,
labels=c('<0.01','[0.01,0.05)','[0.05,0.1)','[0.1,0.2)',
'[0.2,1.0)','[1.0,1.5)','1.5+',"NA"),right=F)
## race-stratified expected counts, BOS ##
bos_maps0527<-ggplot(shp_plot0527, aes(fill = exp_factor)) +
geom_sf(colour=NA) +
coord_sf(xlim=xlim,ylim=ylim)+
scale_fill_brewer(palette = "YlOrRd")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_line(colour = 'transparent'),
panel.grid.minor = element_line(colour = 'transparent'),
legend.title=element_blank(),text=element_text(size=18))+
facet_wrap(~ race)
bos_maps0527
## get quantiles of expected counts for maps ##
ma_q<-c(0,0.01,0.05,0.1,0.2,1,1.5,max(shp_plot$fit_mape,na.rm = T)+1)
## long form by race ##
shp_plot<-gather(ma_shp,'race','fit_mape',
c(dp_fit_mape_w,dp_fit_mape_b),factor_key = T)
##################################################################
#######   MAPE map for dp ########################################
##################################################################
load('bw_adat.RData')
adat <- cbind(adat, dp_fit_mape)[,c(1, 2, 8)] #2877*4
## put in wide format to merge with the shapefile ##
adat_wide<-merge(adat[which(adat$race=='white'),],adat[which(adat$race=='black'),],by='GEOID',suffixes=c('_w','_b'))
## extract CT shapefile ##
ma_shp<-tracts(state = 'MA',year=2010)
## merge with pop and rate data ##
ma_shp<-merge(ma_shp,adat_wide,by.x='GEOID10',by.y='GEOID',all.x=T)
## put in sf format to use nice mapping packages ##
ma_shp<-st_as_sf(ma_shp)  #1478*21
## long form by race ##
shp_plot<-gather(ma_shp,'race','fit_mape',
c(dp_fit_mape_w,dp_fit_mape_b),factor_key = T)
shp_plot$race<-mapvalues(shp_plot$race,
from=c('dp_fit_mape_w','dp_fit_mape_b'),
to=c('NHW','Black'))
# histogram to find the quantiles shp_plot$fit_mape
quantile(shp_plot$fit_mape, na.rm = T)
ma_q<-c(0,0.01,0.05,0.1,0.2,1,1.5,max(shp_plot$fit_mape,na.rm = T)+1)
ma_q
shp_plot$exp_factor<-cut(shp_plot$fit_mape,breaks=ma_q,
labels=c('<0.01','[0.01,0.05)','[0.05,0.1)','[0.1,0.2)',
'[0.2,1.0)','[1.0,1.5)','1.5+'),right=F)
## race-stratified expected counts, MA ##
ma_maps<-ggplot(shp_plot, aes(fill = exp_factor)) +
geom_sf(colour=NA) +
scale_fill_brewer(palette = "YlOrRd")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_line(colour = 'transparent'),
panel.grid.minor = element_line(colour = 'transparent'),
legend.title=element_blank(),text=element_text(size=18))+
facet_wrap(~ race)
## read in boston shapefiles ##
bos_shp<-st_read('boston_ct/Census_2010_Tracts.shp')
bos_shp<-merge(bos_shp,adat_wide,by.x='GEOID10',by.y='GEOID',all.x=T)
bos_bbox<-as.numeric(st_bbox(bos_shp))
xlim<-c(bos_bbox[1], bos_bbox[1]+.4*(bos_bbox[3]-bos_bbox[1]))
ylim<-c(bos_bbox[2], bos_bbox[2]+.8*(bos_bbox[4]-bos_bbox[2]))
## long form by race ##
shp_plot<-gather(bos_shp,'race','fit_mape',
c(dp_fit_mape_w,dp_fit_mape_b),factor_key = T)
shp_plot$race<-mapvalues(shp_plot$race,
from=c('dp_fit_mape_w','dp_fit_mape_b'),
to=c('NHW','Black'))
## get quantiles of expected counts for maps ##
ma_q<-c(0,0.01,0.05,0.1,0.2,1,1.5,max(shp_plot$fit_mape,na.rm = T)+1)
ma_q
## get quantiles of expected counts for maps ##
ma_q<-c(0,0.01,0.05,0.1,0.2,1,1.5,max(shp_plot$fit_mape,na.rm = T)+1)
max(v)
max(dp0527_fit_mape)
max(dp_fit_mape)
# histogram to find the quantiles shp_plot$fit_mape
quantile(shp_plot$fit_mape, na.rm = T)
order(dp_fit_mape)
View(dp_fit_mape)
View(order(dp_fit_mape))
# histogram to find the quantiles shp_plot$fit_mape
quantile(shp_plot$fit_mape, na.rm = T)
quantile(dp0527_fit_mape)
quantile(dp_fit_mape)
0.005
0.4*0.002
4*0.02
4*0.01
##################################################################
#######   MAPE map for dp ########################################
##################################################################
load('bw_adat.RData')
adat <- cbind(adat, dp_fit_mape)[,c(1, 2, 8)] #2877*4
## put in wide format to merge with the shapefile ##
adat_wide<-merge(adat[which(adat$race=='white'),],adat[which(adat$race=='black'),],by='GEOID',suffixes=c('_w','_b'))
## extract CT shapefile ##
ma_shp<-tracts(state = 'MA',year=2010)
## merge with pop and rate data ##
ma_shp<-merge(ma_shp,adat_wide,by.x='GEOID10',by.y='GEOID',all.x=T)
## put in sf format to use nice mapping packages ##
ma_shp<-st_as_sf(ma_shp)  #1478*21
## long form by race ##
shp_plot<-gather(ma_shp,'race','fit_mape',
c(dp_fit_mape_w,dp_fit_mape_b),factor_key = T)
shp_plot$race<-mapvalues(shp_plot$race,
from=c('dp_fit_mape_w','dp_fit_mape_b'),
to=c('NHW','Black'))
# histogram to find the quantiles shp_plot$fit_mape
quantile(shp_plot$fit_mape, na.rm = T)
ma_q<-c(0,0.001,0.01,0.05,0.1,0.15,0.2,max(shp_plot$fit_mape,na.rm = T)+1)
shp_plot$exp_factor<-cut(shp_plot$fit_mape,breaks=ma_q,
labels=c('<0.001','[0.001,0.01)','[0.01,0.05)','[0.05,0.1)','[0.1,0.15)',
'[0.15,0.2)','0.2+'),right=F)
## race-stratified expected counts, MA ##
ma_maps<-ggplot(shp_plot, aes(fill = exp_factor)) +
geom_sf(colour=NA) +
scale_fill_brewer(palette = "YlOrRd")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_line(colour = 'transparent'),
panel.grid.minor = element_line(colour = 'transparent'),
legend.title=element_blank(),text=element_text(size=18))+
facet_wrap(~ race)
ma_maps
## read in boston shapefiles ##
bos_shp<-st_read('boston_ct/Census_2010_Tracts.shp')
bos_shp<-merge(bos_shp,adat_wide,by.x='GEOID10',by.y='GEOID',all.x=T)
bos_bbox<-as.numeric(st_bbox(bos_shp))
xlim<-c(bos_bbox[1], bos_bbox[1]+.4*(bos_bbox[3]-bos_bbox[1]))
ylim<-c(bos_bbox[2], bos_bbox[2]+.8*(bos_bbox[4]-bos_bbox[2]))
## long form by race ##
shp_plot<-gather(bos_shp,'race','fit_mape',
c(dp_fit_mape_w,dp_fit_mape_b),factor_key = T)
shp_plot$race<-mapvalues(shp_plot$race,
from=c('dp_fit_mape_w','dp_fit_mape_b'),
to=c('NHW','Black'))
shp_plot$exp_factor<-cut(shp_plot$fit_mape,breaks=ma_q,
labels=c('<0.001','[0.001,0.01)','[0.01,0.05)','[0.05,0.1)','[0.1,0.15)',
'[0.15,0.2)','0.2+'),right=F)
## race-stratified expected counts, BOS ##
bos_maps<-ggplot(shp_plot, aes(fill = exp_factor)) +
geom_sf(colour=NA) +
coord_sf(xlim=xlim,ylim=ylim)+
scale_fill_brewer(palette = "YlOrRd")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_line(colour = 'transparent'),
panel.grid.minor = element_line(colour = 'transparent'),
legend.title=element_blank(),text=element_text(size=18))+
facet_wrap(~ race)
m<-cowplot::plot_grid(ma_maps,bos_maps,ncol=1)
m
#### MAPE0527 plot
load('bw_adat.RData')
adat <- cbind(adat, dp0527_fit_mape)[,c(1, 2, 8)] #2877*4
## put in wide format to merge with the shapefile ##
adat_wide<-merge(adat[which(adat$race=='white'),],adat[which(adat$race=='black'),],by='GEOID',suffixes=c('_w','_b'))
## extract CT shapefile ##
ma_shp<-tracts(state = 'MA',year=2010)
## merge with pop and rate data ##
ma_shp<-merge(ma_shp,adat_wide,by.x='GEOID10',by.y='GEOID',all.x=T)
## put in sf format to use nice mapping packages ##
ma_shp<-st_as_sf(ma_shp)  #1478*21
shp_plot0527<-gather(ma_shp,'race','fit0527_mape',
c(dp0527_fit_mape_w,dp0527_fit_mape_b),factor_key = T)
shp_plot0527$race<-mapvalues(shp_plot0527$race,
from=c('dp0527_fit_mape_w','dp0527_fit_mape_b'),
to=c('NHW','Black'))
shp_plot0527$exp_factor<-cut(shp_plot0527$fit0527_mape,breaks=ma_q,
labels=c('<0.001','[0.001,0.01)','[0.01,0.05)','[0.05,0.1)','[0.1,0.15)',
'[0.15,0.2)','0.2+'),right=F)
## race-stratified expected counts, MA ##
ma_maps0527<-ggplot(shp_plot0527, aes(fill = exp_factor)) +
geom_sf(colour=NA) +
scale_fill_brewer(palette = "YlOrRd")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_line(colour = 'transparent'),
panel.grid.minor = element_line(colour = 'transparent'),
legend.title=element_blank(),text=element_text(size=18))+
facet_wrap(~ race)
## read in boston shapefiles ##
bos_shp<-st_read('boston_ct/Census_2010_Tracts.shp')
bos_shp<-merge(bos_shp,adat_wide,by.x='GEOID10',by.y='GEOID',all.x=T)
bos_bbox<-as.numeric(st_bbox(bos_shp))
xlim<-c(bos_bbox[1], bos_bbox[1]+.4*(bos_bbox[3]-bos_bbox[1]))
ylim<-c(bos_bbox[2], bos_bbox[2]+.8*(bos_bbox[4]-bos_bbox[2]))
## long form by race ##
shp_plot0527<-gather(bos_shp,'race','fit0527_mape',
c(dp0527_fit_mape_w,dp0527_fit_mape_b),factor_key = T)
shp_plot0527$race<-mapvalues(shp_plot0527$race,
from=c('dp0527_fit_mape_w','dp0527_fit_mape_b'),
to=c('NHW','Black'))
shp_plot0527$exp_factor<-cut(shp_plot0527$fit0527_mape,breaks=ma_q,
labels=c('<0.001','[0.001,0.01)','[0.01,0.05)','[0.05,0.1)','[0.1,0.15)',
'[0.15,0.2)','0.2+'),right=F)
## race-stratified expected counts, BOS ##
bos_maps0527<-ggplot(shp_plot0527, aes(fill = exp_factor)) +
geom_sf(colour=NA) +
coord_sf(xlim=xlim,ylim=ylim)+
scale_fill_brewer(palette = "YlOrRd")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_line(colour = 'transparent'),
panel.grid.minor = element_line(colour = 'transparent'),
legend.title=element_blank(),text=element_text(size=18))+
facet_wrap(~ race)
m0527<-cowplot::plot_grid(ma_maps0527,bos_maps0527,ncol=1)
m0527
# scatter plot of SMRs (ce vs. dp)
dp_w_GEOID <- cbind(adat[1:2], dp_smr, ce_smr)
dp0527_w_GEOID <- cbind(adat[1:2], dp0527_smr, ce_smr)
dp2_w_GEOID <- cbind(adat[1:2], dp_smr, dp0527_smr, ce_smr)
dp_scatter <- ggplot(data = dp_w_GEOID, mapping = aes(x = ce_smr, y = dp_smr)) + geom_point()
dp_scatter <- dp_scatter + facet_wrap(~race, scales="free") + geom_abline(colour="red")
dp0527_scatter <- ggplot(data = dp0527_w_GEOID, mapping = aes(x = ce_smr, y = dp0527_smr)) + geom_point()
dp0527_scatter <- dp0527_scatter + facet_wrap(~race, scales="free") + geom_abline(colour="red")
dp_scatter +ggtitle("scatter plot of SMRs (ce vs. dp)")
dp0527_scatter+ggtitle("scatter plot of SMRs (ce vs. dp0527)")
dp_scatter2 <- ggplot(dp2_w_GEOID, aes(x=ce_smr, y=dp_smr, color=race)) +
geom_point(alpha=0.1) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
# Use brewer color palettes
dp_scatter2 +scale_color_brewer(palette="Dark2")+ggtitle("scatter plot of SMRs (ce vs. dp)")
dp0527_scatter2 <- ggplot(dp2_w_GEOID, aes(x=ce_smr, y=dp0527_smr, color=race)) +
geom_point(alpha=0.1) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
# Use brewer color palettes
dp0527_scatter2 +scale_color_brewer(palette="Dark2")+ggtitle("scatter plot of SMRs (ce vs. dp0527)")
dp_ce3 <- melt(dp2_w_GEOID, id=c("GEOID", "race", "ce_smr"))
dp_ce3_scatter <- ggplot(data = dp_ce3, mapping = aes(x = ce_smr, y = value, color=variable)) + geom_point(alpha=0.4) + ylab("dp_smr")
dp_ce3_scatter + facet_wrap(~race) + geom_abline(colour="red")+ggtitle("Scatter plot of SMRs ")
dp_ce_scatter2 <- ggplot(data = dp_ce3, mapping = aes(x = ce_smr, y = value, color=race)) + geom_point(alpha=0.3) + ylab("dp_smr")+scale_color_brewer(palette="Dark2")
dp_ce_scatter2 + facet_wrap(~variable) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)+ geom_abline(colour="grey")
# scatter plot of SMRs (ce vs. dp)
dp_w_GEOID <- cbind(adat[1:2], dp_smr, ce_smr)
dp0527_w_GEOID <- cbind(adat[1:2], dp0527_smr, ce_smr)
dp2_w_GEOID <- cbind(adat[1:2], dp_smr, dp0527_smr, ce_smr)
dp_scatter <- ggplot(data = dp_w_GEOID, mapping = aes(x = ce_smr, y = dp_smr)) + geom_point()
dp_scatter <- dp_scatter + facet_wrap(~race, scales="free") + geom_abline(colour="red")
dp0527_scatter <- ggplot(data = dp0527_w_GEOID, mapping = aes(x = ce_smr, y = dp0527_smr)) + geom_point()
dp0527_scatter <- dp0527_scatter + facet_wrap(~race, scales="free") + geom_abline(colour="red")
dp_scatter +ggtitle("scatter plot of SMRs (ce vs. dp)")
dp0527_scatter+ggtitle("scatter plot of SMRs (ce vs. dp0527)")
dp_scatter2 <- ggplot(dp2_w_GEOID, aes(x=ce_smr, y=dp_smr, color=race)) +
geom_point(alpha=0.1) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
# Use brewer color palettes
dp_scatter2 +scale_color_brewer(palette="Dark2")+ggtitle("scatter plot of SMRs (ce vs. dp)")
dp0527_scatter2 <- ggplot(dp2_w_GEOID, aes(x=ce_smr, y=dp0527_smr, color=race)) +
geom_point(alpha=0.1) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
# Use brewer color palettes
dp0527_scatter2 +scale_color_brewer(palette="Dark2")+ggtitle("scatter plot of SMRs (ce vs. dp0527)")
dp_ce3 <- melt(dp2_w_GEOID, id=c("GEOID", "race", "ce_smr"))
dp_ce3_scatter <- ggplot(data = dp_ce3, mapping = aes(x = ce_smr, y = value, color=variable)) + geom_point(alpha=0.4) + ylab("dp_smr")
dp_ce3_scatter + facet_wrap(~race) + geom_abline(colour="red")+ggtitle("Scatter plot of SMRs ")
dp_ce_scatter2 <- ggplot(data = dp_ce3, mapping = aes(x = ce_smr, y = value, color=race)) + geom_point(alpha=0.3) + ylab("dp_smr")+scale_color_brewer(palette="Dark2")
dp_ce_scatter2 + facet_wrap(~variable) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)+ geom_abline(colour="grey")
dp_ce_scatter2 + facet_wrap(~variable) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)+ geom_abline(colour="grey")
# scatter plot of SMRs (ce vs. dp)
dp_w_GEOID <- cbind(adat[1:2], dp_smr, ce_smr)
dp0527_w_GEOID <- cbind(adat[1:2], dp0527_smr, ce_smr)
dp2_w_GEOID <- cbind(adat[1:2], dp_smr, dp0527_smr, ce_smr)
dp_scatter <- ggplot(data = dp_w_GEOID, mapping = aes(x = ce_smr, y = dp_smr)) + geom_point()
dp_scatter <- dp_scatter + facet_wrap(~race, scales="free") + geom_abline(colour="red")
dp0527_scatter <- ggplot(data = dp0527_w_GEOID, mapping = aes(x = ce_smr, y = dp0527_smr)) + geom_point()
dp0527_scatter <- dp0527_scatter + facet_wrap(~race, scales="free") + geom_abline(colour="red")
dp_scatter +ggtitle("scatter plot of SMRs (ce vs. dp)")
dp0527_scatter+ggtitle("scatter plot of SMRs (ce vs. dp0527)")
dp_scatter2 <- ggplot(dp2_w_GEOID, aes(x=ce_smr, y=dp_smr, color=race)) +
geom_point(alpha=0.1) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
# Use brewer color palettes
dp_scatter2 +scale_color_brewer(palette="Dark2")+ggtitle("scatter plot of SMRs (ce vs. dp)")
dp0527_scatter2 <- ggplot(dp2_w_GEOID, aes(x=ce_smr, y=dp0527_smr, color=race)) +
geom_point(alpha=0.1) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
# Use brewer color palettes
dp0527_scatter2 +scale_color_brewer(palette="Dark2")+ggtitle("scatter plot of SMRs (ce vs. dp0527)")
dp_ce3 <- melt(dp2_w_GEOID, id=c("GEOID", "race", "ce_smr"))
dp_ce3_scatter <- ggplot(data = dp_ce3, mapping = aes(x = ce_smr, y = value, color=variable)) + geom_point(alpha=0.4) + ylab("dp_smr")
dp_ce3_scatter + facet_wrap(~race) + geom_abline(colour="red")+ggtitle("Scatter plot of SMRs ")
dp_ce_scatter2 <- ggplot(data = dp_ce3, mapping = aes(x = ce_smr, y = value, color=race)) + geom_point(alpha=0.3) + ylab("dp_smr")+scale_color_brewer(palette="Dark2")
dp_ce_scatter2 + facet_wrap(~variable) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)+ geom_abline(colour="grey")
dp_ce_scatter2 + facet_wrap(~variable) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)+ geom_abline(colour="grey")
# Use brewer color palettes
dp0527_scatter +scale_color_brewer(palette="Dark2")
dp_ce_scatter2 <- ggplot(data = dp_ce3, mapping = aes(x = ce_fit_mean, y = value, color=race)) + geom_point(alpha=0.3) + ylab("dp_fit_mean")+scale_color_brewer(palette="Dark2")
dp_ce_scatter2 + facet_wrap(~variable) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)+ geom_abline(colour="grey")
dp_ce_scatter2 <- ggplot(data = dp_ce3, mapping = aes(x = ce_fit_mean, y = value, color=race)) + geom_point(alpha=0.3) + ylab("dp_fit_mean")+scale_color_brewer(palette="Dark2")
dp_ce_scatter2 + facet_wrap(~variable) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)+ geom_abline(colour="grey")
dp_ce3 <- melt(dp2_w_GEOID, id=c("GEOID", "race", "ce_fit_mean"))
max(adat$exp_counts_ce)
max(adat$exp_counts_ce, na.rm = T)
adat$exp_counts_ce
Ptrue
adat$exp_counts_ce
load("bw_adat.RData")
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path))
load("bw_adat.RData")
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path))
load("bw_adat.RData")
load("/Users/liyanran/Desktop/Research/Rachel/CT_race_diff_privacy/bw_adat.RData")
names(adat)
max(adat$exp_counts_ce, na.rm = T)
